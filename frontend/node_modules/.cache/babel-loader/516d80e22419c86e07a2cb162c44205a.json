{"ast":null,"code":"var _jsxFileName = \"X:\\\\portfolio\\\\CryptoDjangoReact\\\\frontend\\\\src\\\\components\\\\UploadFile.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// const input = document.getElementById('fileinput');\n// This will upload the file after having read it\nexport default function UploadFile() {\n  // const upload = (file) => {\n  //   fetch('http://www.example.net', { // Your POST endpoint\n  //     method: 'POST',\n  //     headers: {\n  //       // Content-Type may need to be completely **omitted**\n  //       // or you may need something\n  //       \"Content-Type\": \"You will perhaps need to define a content-type here\"\n  //     },\n  //     body: file // This is your file object\n  //   }).then(\n  //     response => response.json() // if the response is a JSON object\n  //   ).then(\n  //     success => console.log(success) // Handle the success response object\n  //   ).catch(\n  //     error => console.log(error) // Handle the error response object\n  //   );\n  // };\n  // // Event handler executed when a file is selected\n  // const onSelectFile = () => upload(input.files[0]);\n  // // Add a listener on your input\n  // // It will be triggered when a file will be selected\n  // input.addEventListener('change', onSelectFile, false);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n_c = UploadFile;\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadFile\");","map":{"version":3,"sources":["X:/portfolio/CryptoDjangoReact/frontend/src/components/UploadFile.js"],"names":["UploadFile"],"mappings":";;AAAA;AAEA;AACA,eAAe,SAASA,UAAT,GAAqB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA,sBACI;AAAA,2BACI;AAAO,MAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;KA9BuBA,U","sourcesContent":["// const input = document.getElementById('fileinput');\r\n\r\n// This will upload the file after having read it\r\nexport default function UploadFile(){\r\n    // const upload = (file) => {\r\n    //   fetch('http://www.example.net', { // Your POST endpoint\r\n    //     method: 'POST',\r\n    //     headers: {\r\n    //       // Content-Type may need to be completely **omitted**\r\n    //       // or you may need something\r\n    //       \"Content-Type\": \"You will perhaps need to define a content-type here\"\r\n    //     },\r\n    //     body: file // This is your file object\r\n    //   }).then(\r\n    //     response => response.json() // if the response is a JSON object\r\n    //   ).then(\r\n    //     success => console.log(success) // Handle the success response object\r\n    //   ).catch(\r\n    //     error => console.log(error) // Handle the error response object\r\n    //   );\r\n    // };\r\n    \r\n    // // Event handler executed when a file is selected\r\n    // const onSelectFile = () => upload(input.files[0]);\r\n    \r\n    // // Add a listener on your input\r\n    // // It will be triggered when a file will be selected\r\n    // input.addEventListener('change', onSelectFile, false);\r\n    return (\r\n        <form>\r\n            <input type=\"file\"></input>\r\n        </form>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}