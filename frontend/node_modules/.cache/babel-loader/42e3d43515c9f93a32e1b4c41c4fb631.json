{"ast":null,"code":"var _jsxFileName = \"X:\\\\portfolio\\\\CryptoDjangoReact\\\\frontend\\\\src\\\\components\\\\Trades.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport React from \"react-dom\";\nimport { getTracker } from \"../helpers/getTracker\";\nimport { getUserToken } from \"../helpers/getUserToken\";\nimport { useCurrentUser } from \"./CurrentUserContext\";\nimport NavBar from \"./NavBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst url = process.env.BACK_END_URL || \"http://localhost:8000\";\n\nfunction Trades(props) {\n  _s();\n\n  const [trades, setTrades] = useState([]);\n  const [refresh, setRefresh] = useState(false);\n  const {\n    currentUser,\n    saveCurrentUser\n  } = useCurrentUser();\n\n  function user() {\n    getUserToken(\"Grego\", \"V4711gda\", \"http://localhost:8000\").catch(e => {\n      return {\n        Error: e\n      };\n    }).then(res => {\n      if (res.token) {\n        console.log(\"Succesfully loged in\"); // This saveCurrentUser is to set a context var(user)\n\n        saveCurrentUser(res.user.id, res.token, res.user.username, res.user.email);\n      } else {\n        console.log(\"Error: \", res);\n      }\n    });\n  }\n\n  function refreshTrades() {\n    setTrades([]);\n    refresh ? setRefresh(false) : setRefresh(true);\n  }\n\n  useEffect(() => {\n    const fetchTrades = async () => {\n      try {\n        const response = await getTracker(currentUser.token, \"trades\", url);\n\n        if (response.detail !== \"Invalid token.\") {\n          response.forEach(trade => {\n            trade.start = trade.start.substring(0, 10);\n            trade.end = trade.end.substring(0, 10); // (date.replace(\"T\", \" \").replace(\"Z\", \"\")) for details of the trade\n\n            setTrades(prevTrade => [...prevTrade, trade]);\n          });\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    fetchTrades(); // i disable the props.url warning\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentUser, refresh, props.refreshAll]);\n  console.log(trades);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"trades\",\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        refreshTrades();\n      },\n      children: \"Refresh\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        user();\n      },\n      children: \"User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"section\",\n      children: [/*#__PURE__*/_jsxDEV(\"text\", {\n        children: \"Trades\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        cellspacing: \"0\",\n        class: \"table\",\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            align: \"center\",\n            class: \"pair\",\n            children: \"Pair\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            align: \"center\",\n            class: \"start\",\n            children: \"Start\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            align: \"center\",\n            class: \"end\",\n            children: \"End\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            align: \"right\",\n            class: \"p-l\",\n            children: \"Profit/Loss\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            align: \"right\",\n            class: \"prctg\",\n            children: \"Percentage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), trades.map(trade => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              align: \"center\",\n              class: \"pair\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                width: \"30px\",\n                height: \"30px\",\n                src: trade.logo,\n                alt: \"coin logo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 37\n              }, this), trade.pair]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              align: \"center\",\n              class: \"start\",\n              children: trade.start\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              align: \"center\",\n              class: \"end\",\n              children: trade.end\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              align: \"center\",\n              class: \"p-l\",\n              children: trade.profit_loss\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              align: \"center\",\n              class: \"prctg\",\n              children: trade.percentage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 33\n            }, this)]\n          }, trade.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 29\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Trades, \"ZulReRwXRpS1GJl1RIrTtj8iGnE=\", false, function () {\n  return [useCurrentUser];\n});\n\n_c = Trades;\nexport default Trades;\n\nvar _c;\n\n$RefreshReg$(_c, \"Trades\");","map":{"version":3,"sources":["X:/portfolio/CryptoDjangoReact/frontend/src/components/Trades.js"],"names":["useEffect","useState","React","getTracker","getUserToken","useCurrentUser","NavBar","url","process","env","BACK_END_URL","Trades","props","trades","setTrades","refresh","setRefresh","currentUser","saveCurrentUser","user","catch","e","Error","then","res","token","console","log","id","username","email","refreshTrades","fetchTrades","response","detail","forEach","trade","start","substring","end","prevTrade","refreshAll","map","logo","pair","profit_loss","percentage"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport React from \"react-dom\";\r\nimport { getTracker } from \"../helpers/getTracker\";\r\nimport { getUserToken } from \"../helpers/getUserToken\";\r\nimport { useCurrentUser } from \"./CurrentUserContext\";\r\nimport NavBar from \"./NavBar\";\r\n\r\nconst url = process.env.BACK_END_URL || \"http://localhost:8000\";\r\n\r\n\r\nfunction Trades(props) {\r\n    const [trades, setTrades] = useState([]);\r\n    const [refresh, setRefresh] = useState(false);\r\n    const { currentUser, saveCurrentUser } = useCurrentUser();\r\n\r\n    function user() {\r\n        getUserToken(\"Grego\", \"V4711gda\", \"http://localhost:8000\")\r\n            .catch((e) => {\r\n                return { Error: e };\r\n            })\r\n            .then((res) => {\r\n                if (res.token) {\r\n                    console.log(\"Succesfully loged in\");\r\n                    // This saveCurrentUser is to set a context var(user)\r\n                    saveCurrentUser(\r\n                        res.user.id,\r\n                        res.token,\r\n                        res.user.username,\r\n                        res.user.email\r\n                    );\r\n                } else {\r\n                    console.log(\"Error: \", res);\r\n                }\r\n            });\r\n    }\r\n\r\n    function refreshTrades() {\r\n        setTrades([]);\r\n        refresh ? setRefresh(false) : setRefresh(true);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const fetchTrades = async () => {\r\n            try {\r\n                const response = await getTracker(\r\n                    currentUser.token,\r\n                    \"trades\",\r\n                    url\r\n                );\r\n                if (response.detail !== \"Invalid token.\") {\r\n                    response.forEach((trade) => {\r\n                        trade.start = trade.start.substring(0, 10);\r\n                        trade.end = trade.end.substring(0, 10);\r\n                        // (date.replace(\"T\", \" \").replace(\"Z\", \"\")) for details of the trade\r\n                        setTrades((prevTrade) => [...prevTrade, trade]);\r\n                    });\r\n                }\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        };\r\n        fetchTrades();\r\n        // i disable the props.url warning\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [currentUser, refresh, props.refreshAll]);\r\n\r\n    console.log(trades);\r\n\r\n    return (\r\n        <div className=\"trades\">\r\n        <NavBar />\r\n            <button\r\n                onClick={() => {\r\n                    refreshTrades();\r\n                }}\r\n            >\r\n                Refresh\r\n            </button>\r\n            <button\r\n                onClick={() => {\r\n                    user();\r\n                }}\r\n            >\r\n                User\r\n            </button>\r\n            <div class=\"section\">\r\n                <text>Trades</text>\r\n                <table cellspacing=\"0\" class=\"table\">\r\n                    <tr>\r\n                        <th align=\"center\" class=\"pair\">\r\n                            Pair\r\n                        </th>\r\n                        <th align=\"center\" class=\"start\">\r\n                            Start\r\n                        </th>\r\n                        <th align=\"center\" class=\"end\">\r\n                            End\r\n                        </th>\r\n                        <th align=\"right\" class=\"p-l\">\r\n                            Profit/Loss\r\n                        </th>\r\n                        <th align=\"right\" class=\"prctg\">\r\n                            Percentage\r\n                        </th>\r\n                    </tr>\r\n\r\n                    {trades.map((trade) => {\r\n                        return (\r\n                            <tr key={trade.id}>\r\n                                <td align=\"center\" class=\"pair\">\r\n                                    <img width=\"30px\" height=\"30px\" src={trade.logo} alt=\"coin logo\" />\r\n                                    {trade.pair}\r\n                                </td>\r\n                                <td align=\"center\" class=\"start\">\r\n                                    {trade.start}\r\n                                </td>\r\n                                <td align=\"center\" class=\"end\">\r\n                                    {trade.end}\r\n                                </td>\r\n                                <td align=\"center\" class=\"p-l\">\r\n                                    {trade.profit_loss}\r\n                                </td>\r\n                                <td align=\"center\" class=\"prctg\">\r\n                                    {trade.percentage}\r\n                                </td>\r\n                            </tr>\r\n                        );\r\n                    })}\r\n                </table>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Trades;\r\n"]},"metadata":{},"sourceType":"module"}