{"ast":null,"code":"var _jsxFileName = \"X:\\\\portfolio\\\\CryptoDjangoReact\\\\frontend\\\\src\\\\components\\\\Holds.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport React from \"react-dom\";\nimport { getTracker } from \"../helpers/getTracker\";\nimport { useCurrentUser } from \"./CurrentUserContext\";\nimport NavBar from \"./NavBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst url = process.env.BACK_END_URL || \"http://localhost:8000\";\n\nfunction Holds(props) {\n  _s();\n\n  const [holds, setHolds] = useState([]);\n  const [refresh, setRefresh] = useState(false);\n  const {\n    currentUser\n  } = useCurrentUser();\n\n  function refreshHolds() {\n    setHolds([]);\n    refresh ? setRefresh(false) : setRefresh(true);\n  }\n\n  useEffect(() => {\n    setHolds([]);\n\n    const fetchHolds = async () => {\n      try {\n        const response = await getTracker(currentUser.token, \"holds\", url);\n\n        if (response.detail !== \"Invalid token.\") {\n          response.forEach(hold => {\n            var avg = 1 / hold.price;\n\n            if (avg < 0.1) {\n              var regex = /0+/g;\n              var list_regex = avg.toString().match(regex);\n              hold.round = list_regex[1].length + 2; // the above code is to know how much decimald the hold need\n            }\n\n            hold.start_date = hold.start_date.substring(0, 10); // (date.replace(\"T\", \" \").replace(\"Z\", \"\")) for details of the trade\n\n            setHolds(prevHold => [...prevHold, hold]);\n          });\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    fetchHolds(); // i disable the props.url warning\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentUser, refresh]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"trades\",\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        refreshHolds();\n      },\n      children: \"Refresh\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"section\",\n      children: [/*#__PURE__*/_jsxDEV(\"text\", {\n        children: \"Holds\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        cellspacing: \"0\",\n        class: \"table\",\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            align: \"center\",\n            class: \"pair\",\n            children: \"Pair\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            align: \"center\",\n            class: \"start\",\n            children: \"Start\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            align: \"center\",\n            class: \"holding\",\n            children: \"Holding\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            align: \"center\",\n            class: \"price\",\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            align: \"right\",\n            class: \"p-l\",\n            children: \"Profit/Loss\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            align: \"right\",\n            class: \"prctg\",\n            children: \"Percentage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), holds.map(hold => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              align: \"center\",\n              class: \"pair\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                width: \"30px\",\n                height: \"30px\",\n                src: hold.logo,\n                alt: \"coin logo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 37\n              }, this), hold.pair]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              align: \"center\",\n              class: \"start\",\n              children: hold.start_date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              align: \"right\",\n              class: \"holding\",\n              children: hold.holding.toFixed(hold.round)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              align: \"right\",\n              class: \"holding\",\n              children: [\"$\", hold.price]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              align: \"right\",\n              class: \"p-l\",\n              children: [\"$\", (hold.holding * hold.price).toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              align: \"right\",\n              class: \"prctg\",\n              children: [((hold.price - hold.start_price) / hold.start_price * 100).toFixed(2), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 33\n            }, this)]\n          }, hold.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 29\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Holds, \"PM5UErFhAgt9GuVPJJVtPTgbP8E=\", false, function () {\n  return [useCurrentUser];\n});\n\n_c = Holds;\nexport default Holds;\n\nvar _c;\n\n$RefreshReg$(_c, \"Holds\");","map":{"version":3,"sources":["X:/portfolio/CryptoDjangoReact/frontend/src/components/Holds.js"],"names":["useEffect","useState","React","getTracker","useCurrentUser","NavBar","url","process","env","BACK_END_URL","Holds","props","holds","setHolds","refresh","setRefresh","currentUser","refreshHolds","fetchHolds","response","token","detail","forEach","hold","avg","price","regex","list_regex","toString","match","round","length","start_date","substring","prevHold","e","console","log","map","logo","pair","holding","toFixed","start_price","id"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport React from \"react-dom\";\r\nimport { getTracker } from \"../helpers/getTracker\";\r\nimport { useCurrentUser } from \"./CurrentUserContext\";\r\nimport NavBar from \"./NavBar\";\r\n\r\nconst url = process.env.BACK_END_URL || \"http://localhost:8000\";\r\n\r\nfunction Holds(props) {\r\n    const [holds, setHolds] = useState([]);\r\n    const [refresh, setRefresh] = useState(false);\r\n    const { currentUser } = useCurrentUser();\r\n\r\n    function refreshHolds() {\r\n        setHolds([]);\r\n        refresh ? setRefresh(false) : setRefresh(true);\r\n    }\r\n\r\n    useEffect(() => {\r\n        setHolds([]);\r\n        const fetchHolds = async () => {\r\n            try {\r\n                const response = await getTracker(\r\n                    currentUser.token,\r\n                    \"holds\",\r\n                    url\r\n                );\r\n                if (response.detail !== \"Invalid token.\") {\r\n                    response.forEach((hold) => {\r\n                        var avg = 1 / hold.price;\r\n                        if (avg < 0.1) {\r\n                            var regex = /0+/g;\r\n                            var list_regex = avg.toString().match(regex);\r\n                            hold.round = list_regex[1].length + 2;\r\n                            // the above code is to know how much decimald the hold need\r\n                        }\r\n                        hold.start_date = hold.start_date.substring(0, 10);\r\n                        // (date.replace(\"T\", \" \").replace(\"Z\", \"\")) for details of the trade\r\n                        setHolds((prevHold) => [...prevHold, hold]);\r\n                    });\r\n                }\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        };\r\n        fetchHolds();\r\n        // i disable the props.url warning\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [currentUser, refresh]);\r\n\r\n    return (\r\n        <div className=\"trades\">\r\n            <NavBar />\r\n            <button\r\n                onClick={() => {\r\n                    refreshHolds();\r\n                }}\r\n            >\r\n                Refresh\r\n            </button>\r\n\r\n            <div class=\"section\">\r\n                <text>Holds</text>\r\n                <table cellspacing=\"0\" class=\"table\">\r\n                    <tr>\r\n                        <th align=\"center\" class=\"pair\">\r\n                            Pair\r\n                        </th>\r\n                        <th align=\"center\" class=\"start\">\r\n                            Start\r\n                        </th>\r\n                        <th align=\"center\" class=\"holding\">\r\n                            Holding\r\n                        </th>\r\n                        <th align=\"center\" class=\"price\">\r\n                            Price\r\n                        </th>\r\n                        <th align=\"right\" class=\"p-l\">\r\n                            Profit/Loss\r\n                        </th>\r\n                        <th align=\"right\" class=\"prctg\">\r\n                            Percentage\r\n                        </th>\r\n                    </tr>\r\n\r\n                    {holds.map((hold) => {\r\n                        return (\r\n                            <tr key={hold.id}>\r\n                                <td align=\"center\" class=\"pair\">\r\n                                    <img\r\n                                        width=\"30px\"\r\n                                        height=\"30px\"\r\n                                        src={hold.logo}\r\n                                        alt=\"coin logo\"\r\n                                    />\r\n                                    {hold.pair}\r\n                                </td>\r\n                                <td align=\"center\" class=\"start\">\r\n                                    {hold.start_date}\r\n                                </td>\r\n                                <td align=\"right\" class=\"holding\">\r\n                                    {hold.holding.toFixed(hold.round)}\r\n                                </td>\r\n                                <td align=\"right\" class=\"holding\">\r\n                                    ${hold.price}\r\n                                </td>\r\n                                <td align=\"right\" class=\"p-l\">\r\n                                    ${(hold.holding * hold.price).toFixed(2)}\r\n                                </td>\r\n                                <td align=\"right\" class=\"prctg\">\r\n                                    {(\r\n                                        ((hold.price - hold.start_price) /\r\n                                            hold.start_price) *\r\n                                        100\r\n                                    ).toFixed(2)}\r\n                                    %\r\n                                </td>\r\n                            </tr>\r\n                        );\r\n                    })}\r\n                </table>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Holds;\r\n"]},"metadata":{},"sourceType":"module"}