{"ast":null,"code":"var _jsxFileName = \"X:\\\\portfolio\\\\CryptoDjangoReact\\\\frontend\\\\src\\\\components\\\\Trades.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport React from \"react-dom\";\nimport { getTrades } from \"../helpers/getTrades\";\nimport { getUserToken } from \"../helpers/getUserToken\";\nimport { useCurrentUser } from \"./CurrentUserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Trades(props) {\n  _s();\n\n  const [trades, setTrades] = useState([{\n    pair: null,\n    start: null,\n    end: null,\n    profit_loss: null,\n    percentage: null\n  }]);\n  const [refresh, setRefresh] = useState(false);\n  const {\n    currentUser,\n    saveCurrentUser\n  } = useCurrentUser();\n\n  function user() {\n    getUserToken(\"Grego\", \"V4711gda\", \"http://localhost:8000\").catch(e => {\n      return {\n        \"Error\": e\n      };\n    }).then(res => {\n      if (res.token) {\n        console.log(\"Succesfully loged in\"); // This saveCurrentUser is to set a context var(user)\n\n        saveCurrentUser(res.user.id, res.token, res.user.username, res.user.email);\n      } else {\n        console.log(\"Error: \", res);\n      }\n    });\n  }\n\n  function refreshTrades() {\n    setTrades([]);\n    refresh ? setRefresh(false) : setRefresh(true);\n  }\n\n  ;\n  useEffect(() => {\n    const fetchTrades = async () => {\n      try {\n        const response = await getTrades(currentUser.token, props.url);\n\n        if (response.detail !== \"Invalid token.\") {\n          response.forEach(trade => {\n            setTrades(prevTrade => [...prevTrade, trade]);\n          });\n        }\n\n        console.log(response);\n        console.log(trades);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    fetchTrades(); // i disable the props.url warning\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentUser, refresh]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"trades\",\n    children: [\"Trades\", /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        refreshTrades();\n      },\n      children: \"Refresh\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        user();\n      },\n      children: \"User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"section\",\n      children: [/*#__PURE__*/_jsxDEV(\"text\", {\n        children: \"Trades\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        cellspacing: \"0\",\n        class: \"table\",\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            align: \"center\",\n            class: \"pair\",\n            children: \"Pair\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            align: \"center\",\n            class: \"start\",\n            children: \"Start\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            align: \"center\",\n            class: \"end\",\n            children: \"End\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            align: \"right\",\n            class: \"p-l\",\n            children: \"Profit/Loss\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            align: \"right\",\n            class: \"prctg\",\n            children: \"Percentage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), trades.map((trade, i) => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              align: \"center\",\n              class: \"pair\",\n              children: trade.pair\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              align: \"center\",\n              class: \"start\",\n              children: trade.start\n            }, i + 1, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              align: \"center\",\n              class: \"end\",\n              children: trade.end\n            }, i + 2, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              align: \"center\",\n              class: \"p-l\",\n              children: trade.profit_loss\n            }, i + 3, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              align: \"center\",\n              class: \"prctg\",\n              children: trade.percentage\n            }, i + 4, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 29\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Trades, \"2miTTsFf7ooYExAuxNGZ33lG9fY=\", false, function () {\n  return [useCurrentUser];\n});\n\n_c = Trades;\nexport default Trades;\n\nvar _c;\n\n$RefreshReg$(_c, \"Trades\");","map":{"version":3,"sources":["X:/portfolio/CryptoDjangoReact/frontend/src/components/Trades.js"],"names":["useEffect","useState","React","getTrades","getUserToken","useCurrentUser","Trades","props","trades","setTrades","pair","start","end","profit_loss","percentage","refresh","setRefresh","currentUser","saveCurrentUser","user","catch","e","then","res","token","console","log","id","username","email","refreshTrades","fetchTrades","response","url","detail","forEach","trade","prevTrade","map","i"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,WAAlB;AACA,SAASC,SAAT,QAA0B,sBAA1B;AACA,SAASC,YAAT,QAA6B,yBAA7B;AACA,SAASC,cAAT,QAA+B,sBAA/B;;;AAKA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAAA;;AACnB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAChC,CACI;AACIS,IAAAA,IAAI,EAAE,IADV;AAEIC,IAAAA,KAAK,EAAE,IAFX;AAGIC,IAAAA,GAAG,EAAE,IAHT;AAIIC,IAAAA,WAAW,EAAE,IAJjB;AAKIC,IAAAA,UAAU,EAAE;AALhB,GADJ,CADgC,CAApC;AAUA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM;AAAEgB,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAAmCb,cAAc,EAAvD;;AAEA,WAASc,IAAT,GAAgB;AACZf,IAAAA,YAAY,CAAC,OAAD,EAAU,UAAV,EAAsB,uBAAtB,CAAZ,CACCgB,KADD,CACOC,CAAC,IAAG;AACP,aAAO;AAAC,iBAASA;AAAV,OAAP;AACH,KAHD,EAICC,IAJD,CAIOC,GAAD,IACN;AACI,UAAIA,GAAG,CAACC,KAAR,EAAe;AACXC,QAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EADW,CAEX;;AACAR,QAAAA,eAAe,CACXK,GAAG,CAACJ,IAAJ,CAASQ,EADE,EAEXJ,GAAG,CAACC,KAFO,EAGXD,GAAG,CAACJ,IAAJ,CAASS,QAHE,EAIXL,GAAG,CAACJ,IAAJ,CAASU,KAJE,CAAf;AAMH,OATD,MASO;AACHJ,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBH,GAAvB;AACH;AACJ,KAlBD;AAmBH;;AAED,WAASO,aAAT,GAAyB;AACrBrB,IAAAA,SAAS,CAAC,EAAD,CAAT;AACAM,IAAAA,OAAO,GAAGC,UAAU,CAAC,KAAD,CAAb,GAAuBA,UAAU,CAAC,IAAD,CAAxC;AACH;;AAAA;AAEDhB,EAAAA,SAAS,CAAC,MAAK;AACX,UAAM+B,WAAW,GAAG,YAAY;AAC5B,UAAG;AACC,cAAMC,QAAQ,GAAG,MAAM7B,SAAS,CAACc,WAAW,CAACO,KAAb,EAAoBjB,KAAK,CAAC0B,GAA1B,CAAhC;;AACA,YAAID,QAAQ,CAACE,MAAT,KAAoB,gBAAxB,EAA0C;AACtCF,UAAAA,QAAQ,CAACG,OAAT,CAAiBC,KAAK,IAAI;AACtB3B,YAAAA,SAAS,CAAC4B,SAAS,IAAI,CAAC,GAAGA,SAAJ,EAAeD,KAAf,CAAd,CAAT;AACH,WAFD;AAGH;;AACDX,QAAAA,OAAO,CAACC,GAAR,CAAYM,QAAZ;AACAP,QAAAA,OAAO,CAACC,GAAR,CAAYlB,MAAZ;AACH,OATD,CASE,OAAMa,CAAN,EAAS;AACPI,QAAAA,OAAO,CAACC,GAAR,CAAYL,CAAZ;AACH;AACJ,KAbD;;AAcAU,IAAAA,WAAW,GAfA,CAgBX;AACA;AACH,GAlBQ,EAkBN,CAACd,WAAD,EAAcF,OAAd,CAlBM,CAAT;AAsBA,sBACI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,sCAEI;AACI,MAAA,OAAO,EAAE,MAAM;AACXe,QAAAA,aAAa;AAChB,OAHL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eASI;AACI,MAAA,OAAO,EAAE,MAAM;AACXX,QAAAA,IAAI;AACP,OAHL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ,eAgBI;AAAK,MAAA,KAAK,EAAC,SAAX;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,WAAW,EAAC,GAAnB;AAAuB,QAAA,KAAK,EAAC,OAA7B;AAAA,gCACI;AAAA,kCACI;AAAI,YAAA,KAAK,EAAC,QAAV;AAAmB,YAAA,KAAK,EAAC,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII;AAAI,YAAA,KAAK,EAAC,QAAV;AAAmB,YAAA,KAAK,EAAC,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAOI;AAAI,YAAA,KAAK,EAAC,QAAV;AAAmB,YAAA,KAAK,EAAC,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPJ,eAUI;AAAI,YAAA,KAAK,EAAC,OAAV;AAAkB,YAAA,KAAK,EAAC,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVJ,eAaI;AAAI,YAAA,KAAK,EAAC,OAAV;AAAkB,YAAA,KAAK,EAAC,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAmBKX,MAAM,CAAC8B,GAAP,CAAW,CAACF,KAAD,EAAQG,CAAR,KAAc;AACtB,8BACI;AAAA,oCACI;AAAI,cAAA,KAAK,EAAC,QAAV;AAAmB,cAAA,KAAK,EAAC,MAAzB;AAAA,wBACKH,KAAK,CAAC1B;AADX,eAAqC6B,CAArC;AAAA;AAAA;AAAA;AAAA,oBADJ,eAII;AAAI,cAAA,KAAK,EAAC,QAAV;AAAmB,cAAA,KAAK,EAAC,OAAzB;AAAA,wBACKH,KAAK,CAACzB;AADX,eAAsC4B,CAAC,GAAC,CAAxC;AAAA;AAAA;AAAA;AAAA,oBAJJ,eAOI;AAAI,cAAA,KAAK,EAAC,QAAV;AAAmB,cAAA,KAAK,EAAC,KAAzB;AAAA,wBACKH,KAAK,CAACxB;AADX,eAAoC2B,CAAC,GAAC,CAAtC;AAAA;AAAA;AAAA;AAAA,oBAPJ,eAUI;AAAI,cAAA,KAAK,EAAC,QAAV;AAAmB,cAAA,KAAK,EAAC,KAAzB;AAAA,wBACKH,KAAK,CAACvB;AADX,eAAoC0B,CAAC,GAAC,CAAtC;AAAA;AAAA;AAAA;AAAA,oBAVJ,eAaI;AAAI,cAAA,KAAK,EAAC,QAAV;AAAmB,cAAA,KAAK,EAAC,OAAzB;AAAA,wBACKH,KAAK,CAACtB;AADX,eAAsCyB,CAAC,GAAC,CAAxC;AAAA;AAAA;AAAA;AAAA,oBAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ;AAmBH,SApBA,CAnBL;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA+DH;;GA9HQjC,M;UAYoCD,c;;;KAZpCC,M;AAgIT,eAAeA,MAAf","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport React from \"react-dom\";\r\nimport { getTrades } from \"../helpers/getTrades\";\r\nimport { getUserToken } from \"../helpers/getUserToken\";\r\nimport { useCurrentUser } from \"./CurrentUserContext\";\r\n\r\n\r\n\r\n\r\nfunction Trades(props) {\r\n    const [trades, setTrades] = useState(\r\n        [\r\n            {\r\n                pair: null,\r\n                start: null,\r\n                end: null,\r\n                profit_loss: null, \r\n                percentage: null,\r\n            }\r\n        ]);\r\n    const [refresh, setRefresh] = useState(false)\r\n    const { currentUser, saveCurrentUser } = useCurrentUser();\r\n\r\n    function user() {\r\n        getUserToken(\"Grego\", \"V4711gda\", \"http://localhost:8000\")\r\n        .catch(e=> {\r\n            return {\"Error\": e}\r\n        })\r\n        .then((res) => \r\n        {   \r\n            if (res.token) {\r\n                console.log(\"Succesfully loged in\");\r\n                // This saveCurrentUser is to set a context var(user)\r\n                saveCurrentUser(\r\n                    res.user.id,\r\n                    res.token,\r\n                    res.user.username,\r\n                    res.user.email\r\n                );\r\n            } else {\r\n                console.log(\"Error: \", res);\r\n            }\r\n        });\r\n    }\r\n\r\n    function refreshTrades() {\r\n        setTrades([])\r\n        refresh ? setRefresh(false) : setRefresh(true)\r\n    };\r\n\r\n    useEffect(()=> {\r\n        const fetchTrades = async () => {\r\n            try{\r\n                const response = await getTrades(currentUser.token, props.url)\r\n                if (response.detail !== \"Invalid token.\") {\r\n                    response.forEach(trade => {\r\n                        setTrades(prevTrade => [...prevTrade, trade])\r\n                    })\r\n                }\r\n                console.log(response);\r\n                console.log(trades);\r\n            } catch(e) {\r\n                console.log(e);\r\n            }\r\n        }\r\n        fetchTrades();\r\n        // i disable the props.url warning\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [currentUser, refresh])\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"trades\">\r\n            Trades\r\n            <button\r\n                onClick={() => {\r\n                    refreshTrades();\r\n                }}\r\n            >\r\n                Refresh\r\n            </button>\r\n            <button\r\n                onClick={() => {\r\n                    user();\r\n                }}\r\n            >\r\n                User\r\n            </button>\r\n            <div class=\"section\">\r\n                <text>Trades</text>\r\n                <table cellspacing=\"0\" class=\"table\">\r\n                    <tr>\r\n                        <th align=\"center\" class=\"pair\">\r\n                            Pair\r\n                        </th>\r\n                        <th align=\"center\" class=\"start\">\r\n                            Start\r\n                        </th>\r\n                        <th align=\"center\" class=\"end\">\r\n                            End\r\n                        </th>\r\n                        <th align=\"right\" class=\"p-l\">\r\n                            Profit/Loss\r\n                        </th>\r\n                        <th align=\"right\" class=\"prctg\">\r\n                            Percentage\r\n                        </th>\r\n                    </tr>\r\n\r\n                    {trades.map((trade, i) => {\r\n                        return (\r\n                            <tr>\r\n                                <td align=\"center\" class=\"pair\" key={i}>\r\n                                    {trade.pair}\r\n                                </td>\r\n                                <td align=\"center\" class=\"start\" key={i+1}>\r\n                                    {trade.start}\r\n                                </td>\r\n                                <td align=\"center\" class=\"end\" key={i+2}>\r\n                                    {trade.end}\r\n                                </td>\r\n                                <td align=\"center\" class=\"p-l\" key={i+3}>\r\n                                    {trade.profit_loss}\r\n                                </td>\r\n                                <td align=\"center\" class=\"prctg\" key={i+4}>\r\n                                    {trade.percentage}\r\n                                </td>\r\n                            </tr>\r\n                        );\r\n                    })}\r\n                </table>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Trades;\r\n"]},"metadata":{},"sourceType":"module"}