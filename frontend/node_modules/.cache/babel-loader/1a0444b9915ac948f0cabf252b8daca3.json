{"ast":null,"code":"var _jsxFileName = \"X:\\\\portfolio\\\\CryptoDjangoReact\\\\frontend\\\\src\\\\components\\\\UploadFile.js\",\n    _s = $RefreshSig$();\n\n// const input = document.getElementById('fileinput');\nimport { useState } from \"react\"; // This will upload the file after having read it\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UploadFile() {\n  _s();\n\n  const [file, setFile] = useState(null);\n\n  function handleChange(e) {\n    setFile(file = e);\n  }\n\n  function handleSubmit() {\n    fetch('http://localhost:8000', {\n      // Your POST endpoint\n      method: 'POST',\n      headers: {\n        // Content-Type may need to be completely **omitted**\n        // or you may need something\n        \"Content-Type\": \"You will perhaps need to define a content-type here\"\n      },\n      body: file // This is your file object\n\n    }).then(response => response.json() // if the response is a JSON object\n    ).then(success => console.log(success) // Handle the success response object\n    ).catch(error => console.log(error) // Handle the error response object\n    );\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleChange(this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UploadFile, \"Nkb8eHkBruGouXteoqeZ1R6wRVk=\");\n\n_c = UploadFile;\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadFile\");","map":{"version":3,"sources":["X:/portfolio/CryptoDjangoReact/frontend/src/components/UploadFile.js"],"names":["useState","UploadFile","file","setFile","handleChange","e","handleSubmit","fetch","method","headers","body","then","response","json","success","console","log","catch","error"],"mappings":";;;AAAA;AAEA,SAASA,QAAT,QAAyB,OAAzB,C,CAEA;;;AACA,eAAe,SAASC,UAAT,GAAqB;AAAA;;AAEhC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,CAAC,IAAD,CAAhC;;AAEA,WAASI,YAAT,CAAsBC,CAAtB,EAAwB;AACpBF,IAAAA,OAAO,CACHD,IAAI,GAAGG,CADJ,CAAP;AAGH;;AAED,WAASC,YAAT,GAAuB;AACjBC,IAAAA,KAAK,CAAC,uBAAD,EAA0B;AAAE;AAC/BC,MAAAA,MAAM,EAAE,MADqB;AAE7BC,MAAAA,OAAO,EAAE;AACP;AACA;AACA,wBAAgB;AAHT,OAFoB;AAO7BC,MAAAA,IAAI,EAAER,IAPuB,CAOlB;;AAPkB,KAA1B,CAAL,CAQGS,IARH,CASEC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EATd,CAS8B;AAT9B,MAUEF,IAVF,CAWEG,OAAO,IAAIC,OAAO,CAACC,GAAR,CAAYF,OAAZ,CAXb,CAWkC;AAXlC,MAYEG,KAZF,CAaEC,KAAK,IAAIH,OAAO,CAACC,GAAR,CAAYE,KAAZ,CAbX,CAa8B;AAb9B;AAeD;;AAAA;AAEL,sBACI;AAAM,IAAA,QAAQ,EAAEZ,YAAhB;AAAA,4BACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAEF,YAAY,CAAC,IAAD;AAAzC;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAQ,MAAA,IAAI,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;GAlCuBH,U;;KAAAA,U","sourcesContent":["// const input = document.getElementById('fileinput');\r\n\r\nimport { useState } from \"react\";\r\n\r\n// This will upload the file after having read it\r\nexport default function UploadFile(){\r\n\r\n    const [file, setFile] = useState(null)\r\n    \r\n    function handleChange(e){\r\n        setFile(\r\n            file = e \r\n        )\r\n    }\r\n\r\n    function handleSubmit(){\r\n          fetch('http://localhost:8000', { // Your POST endpoint\r\n            method: 'POST',\r\n            headers: {\r\n              // Content-Type may need to be completely **omitted**\r\n              // or you may need something\r\n              \"Content-Type\": \"You will perhaps need to define a content-type here\"\r\n            },\r\n            body: file // This is your file object\r\n          }).then(\r\n            response => response.json() // if the response is a JSON object\r\n          ).then(\r\n            success => console.log(success) // Handle the success response object\r\n          ).catch(\r\n            error => console.log(error) // Handle the error response object\r\n          );\r\n        };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input type=\"file\" onChange={handleChange(this)}></input>\r\n            <button type=\"submit\"></button>\r\n        </form>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}