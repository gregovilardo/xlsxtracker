{"ast":null,"code":"var _jsxFileName = \"X:\\\\portfolio\\\\CryptoDjangoReact\\\\frontend\\\\src\\\\components\\\\Holds.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport React from \"react-dom\";\nimport { getTracker } from \"../helpers/getTracker\";\nimport { getUserToken } from \"../helpers/getUserToken\";\nimport { useCurrentUser } from \"./CurrentUserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Holds(props) {\n  _s();\n\n  const [holds, setHolds] = useState([]);\n  const [refresh, setRefresh] = useState(false);\n  const {\n    currentUser,\n    saveCurrentUser\n  } = useCurrentUser();\n\n  function user() {\n    getUserToken(\"Grego\", \"V4711gda\", \"http://localhost:8000\").catch(e => {\n      return {\n        \"Error\": e\n      };\n    }).then(res => {\n      if (res.token) {\n        console.log(\"Succesfully loged in\"); // This saveCurrentUser is to set a context var(user)\n\n        saveCurrentUser(res.user.id, res.token, res.user.username, res.user.email);\n      } else {\n        console.log(\"Error: \", res);\n      }\n    });\n  }\n\n  function refreshTrades() {\n    setHolds([]);\n    refresh ? setRefresh(false) : setRefresh(true);\n  }\n\n  ;\n  useEffect(() => {\n    const fetchTrades = async () => {\n      try {\n        const response = await getTracker(currentUser.token, \"holds\", props.url);\n\n        if (response.detail !== \"Invalid token.\") {\n          response.forEach(hold => {\n            hold.start = hold.start.substring(0, 10);\n            hold.end = hold.end.substring(0, 10); // (date.replace(\"T\", \" \").replace(\"Z\", \"\")) for details of the trade\n\n            setHolds(prevTrade => [...prevTrade, hold]);\n          });\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    fetchTrades(); // i disable the props.url warning\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentUser, refresh, props.refreshAll]);\n  console.log(holds);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"trades\",\n    children: [\"Trades\", /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        refreshTrades();\n      },\n      children: \"Refresh\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        user();\n      },\n      children: \"User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"section\",\n      children: [/*#__PURE__*/_jsxDEV(\"text\", {\n        children: \"Trades\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        cellspacing: \"0\",\n        class: \"table\",\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            align: \"center\",\n            class: \"pair\",\n            children: \"Pair\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            align: \"center\",\n            class: \"start\",\n            children: \"Start\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            align: \"center\",\n            class: \"end\",\n            children: \"End\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            align: \"right\",\n            class: \"p-l\",\n            children: \"Profit/Loss\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            align: \"right\",\n            class: \"prctg\",\n            children: \"Percentage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), holds.map(hold => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              align: \"center\",\n              class: \"pair\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: hold.logo,\n                alt: \"coin logo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 37\n              }, this), hold.pair]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              align: \"center\",\n              class: \"start\",\n              children: hold.start\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              align: \"center\",\n              class: \"end\",\n              children: hold.end\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              align: \"center\",\n              class: \"p-l\",\n              children: hold.profit_loss\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              align: \"center\",\n              class: \"prctg\",\n              children: hold.percentage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 33\n            }, this)]\n          }, hold.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 29\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Holds, \"Y/2mD7CABzeTxF2oiCul99yLz8c=\", false, function () {\n  return [useCurrentUser];\n});\n\n_c = Holds;\nexport default Holds;\n\nvar _c;\n\n$RefreshReg$(_c, \"Holds\");","map":{"version":3,"sources":["X:/portfolio/CryptoDjangoReact/frontend/src/components/Holds.js"],"names":["useEffect","useState","React","getTracker","getUserToken","useCurrentUser","Holds","props","holds","setHolds","refresh","setRefresh","currentUser","saveCurrentUser","user","catch","e","then","res","token","console","log","id","username","email","refreshTrades","fetchTrades","response","url","detail","forEach","hold","start","substring","end","prevTrade","refreshAll","map","logo","pair","profit_loss","percentage"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport React from \"react-dom\";\r\nimport { getTracker } from \"../helpers/getTracker\";\r\nimport { getUserToken } from \"../helpers/getUserToken\";\r\nimport { useCurrentUser } from \"./CurrentUserContext\";\r\n\r\n\r\n\r\nfunction Holds(props) {\r\n    const [holds, setHolds] = useState(\r\n        [\r\n        ]);\r\n    const [refresh, setRefresh] = useState(false)\r\n    const { currentUser, saveCurrentUser } = useCurrentUser();\r\n\r\n    function user() {\r\n        getUserToken(\"Grego\", \"V4711gda\", \"http://localhost:8000\")\r\n        .catch(e=> {\r\n            return {\"Error\": e}\r\n        })\r\n        .then((res) => \r\n        {   \r\n            if (res.token) {\r\n                console.log(\"Succesfully loged in\");\r\n                // This saveCurrentUser is to set a context var(user)\r\n                saveCurrentUser(\r\n                    res.user.id,\r\n                    res.token,\r\n                    res.user.username,\r\n                    res.user.email\r\n                );\r\n            } else {\r\n                console.log(\"Error: \", res);\r\n            }\r\n        });\r\n    }\r\n\r\n    function refreshTrades() {\r\n        setHolds([])\r\n        refresh ? setRefresh(false) : setRefresh(true)\r\n    };\r\n\r\n    useEffect(()=> {\r\n        const fetchTrades = async () => {\r\n            try{\r\n                const response = await getTracker(currentUser.token, \"holds\" ,props.url)\r\n                if (response.detail !== \"Invalid token.\") {\r\n                    response.forEach(hold => {\r\n                        hold.start = hold.start.substring(0, 10)\r\n                        hold.end = hold.end.substring(0, 10)\r\n                        // (date.replace(\"T\", \" \").replace(\"Z\", \"\")) for details of the trade\r\n                        setHolds(prevTrade => [...prevTrade, hold])\r\n                    })\r\n                }\r\n            } catch(e) {\r\n                console.log(e);\r\n            }\r\n        }\r\n        fetchTrades();\r\n        // i disable the props.url warning\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [currentUser, refresh, props.refreshAll])\r\n\r\n\r\n    console.log(holds);\r\n\r\n    return (\r\n        <div className=\"trades\">\r\n            Trades\r\n            <button\r\n                onClick={() => {\r\n                    refreshTrades();\r\n                }}\r\n            >\r\n                Refresh\r\n            </button>\r\n            <button\r\n                onClick={() => {\r\n                    user();\r\n                }}\r\n            >\r\n                User\r\n            </button>\r\n            <div class=\"section\">\r\n                <text>Trades</text>\r\n                <table cellspacing=\"0\" class=\"table\">\r\n                    <tr>\r\n                        <th align=\"center\" class=\"pair\">\r\n                            Pair\r\n                        </th>\r\n                        <th align=\"center\" class=\"start\">\r\n                            Start\r\n                        </th>\r\n                        <th align=\"center\" class=\"end\">\r\n                            End\r\n                        </th>\r\n                        <th align=\"right\" class=\"p-l\">\r\n                            Profit/Loss\r\n                        </th>\r\n                        <th align=\"right\" class=\"prctg\">\r\n                            Percentage\r\n                        </th>\r\n                    </tr>\r\n\r\n                    {holds.map((hold) => {\r\n                        return (\r\n                            <tr key={hold.id}>\r\n                                <td align=\"center\" class=\"pair\" >\r\n                                    <img src={hold.logo} alt=\"coin logo\"/>\r\n                                    {hold.pair}\r\n                                </td>\r\n                                <td align=\"center\" class=\"start\" >\r\n                                    {hold.start}\r\n                                </td>\r\n                                <td align=\"center\" class=\"end\" >\r\n                                    {hold.end}\r\n                                </td>\r\n                                <td align=\"center\" class=\"p-l\" >\r\n                                    {hold.profit_loss}\r\n                                </td>\r\n                                <td align=\"center\" class=\"prctg\" >\r\n                                    {hold.percentage}\r\n                                </td>\r\n                            </tr>\r\n                        );\r\n                    })}\r\n                </table>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Holds;\r\n"]},"metadata":{},"sourceType":"module"}