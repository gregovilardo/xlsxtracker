{"ast":null,"code":"// function getCookie(name) {\n//     let cookieValue = null;\n//     if (document.cookie && document.cookie !== '') {\n//         const cookies = document.cookie.split(';');\n//         for (let i = 0; i < cookies.length; i++) {\n//             const cookie = cookies[i].trim();\n//             // Does this cookie string begin with the name we want?\n//             if (cookie.substring(0, name.length + 1) === (name + '=')) {\n//                 cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n//                 break;\n//             }\n//         }\n//     }\n//     return cookieValue;\n// }\n// const csrftoken = getCookie('csrftoken');\nexport async function getUserToken(username, password, url) {\n  const data = {\n    username: username,\n    password: password\n  };\n  const response = await fetch(`${url}/api/auth/login`, {\n    method: \"POST\",\n    body: new URLSearchParams(data),\n    headers: {\n      // 'X-CSRFToken': csrftoken,\n      \"Access-Control-Allow-Headers\": [\"X-CSRF-Token\", \"Access-Control-Allow-Headers\"],\n      // 'Access-Control-Allow-Origin': 'include',\n      // 'Content-Type': 'application/json'\n      'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'\n    },\n    // withCredentials: true,\n    credentials: \"include\"\n  });\n  return response;\n} // change localhost for the env var","map":{"version":3,"sources":["X:/portfolio/CryptoDjangoReact/frontend/src/helpers/getUserToken.js"],"names":["getUserToken","username","password","url","data","response","fetch","method","body","URLSearchParams","headers","credentials"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,OAAO,eAAeA,YAAf,CAA4BC,QAA5B,EAAsCC,QAAtC,EAAgDC,GAAhD,EAAoD;AACvD,QAAMC,IAAI,GAAG;AAACH,IAAAA,QAAQ,EAAEA,QAAX;AAAqBC,IAAAA,QAAQ,EAACA;AAA9B,GAAb;AACA,QAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEH,GAAI,iBAAR,EAA0B;AAClDI,IAAAA,MAAM,EAAE,MAD0C;AAElDC,IAAAA,IAAI,EAAE,IAAIC,eAAJ,CAAoBL,IAApB,CAF4C;AAGlDM,IAAAA,OAAO,EAAC;AACJ;AACA,sCAAgC,CAAC,cAAD,EAAiB,8BAAjB,CAF5B;AAGJ;AACA;AACA,sBAAiB;AALb,KAH0C;AAUlD;AACAC,IAAAA,WAAW,EAAE;AAXqC,GAA1B,CAA5B;AAaA,SAAON,QAAP;AACH,C,CAED","sourcesContent":["// function getCookie(name) {\r\n//     let cookieValue = null;\r\n//     if (document.cookie && document.cookie !== '') {\r\n//         const cookies = document.cookie.split(';');\r\n//         for (let i = 0; i < cookies.length; i++) {\r\n//             const cookie = cookies[i].trim();\r\n//             // Does this cookie string begin with the name we want?\r\n//             if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n//                 cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n//                 break;\r\n//             }\r\n//         }\r\n//     }\r\n//     return cookieValue;\r\n// }\r\n// const csrftoken = getCookie('csrftoken');\r\n\r\n\r\nexport async function getUserToken(username, password, url){\r\n    const data = {username: username, password:password}\r\n    const response = await fetch(`${url}/api/auth/login`, {\r\n        method: \"POST\",\r\n        body: new URLSearchParams(data),\r\n        headers:{\r\n            // 'X-CSRFToken': csrftoken,\r\n            \"Access-Control-Allow-Headers\": [\"X-CSRF-Token\", \"Access-Control-Allow-Headers\"],\r\n            // 'Access-Control-Allow-Origin': 'include',\r\n            // 'Content-Type': 'application/json'\r\n            'Content-Type' : 'application/x-www-form-urlencoded; charset=UTF-8'\r\n        },\r\n        // withCredentials: true,\r\n        credentials: \"include\",\r\n    })\r\n    return response\r\n}\r\n\r\n// change localhost for the env var"]},"metadata":{},"sourceType":"module"}