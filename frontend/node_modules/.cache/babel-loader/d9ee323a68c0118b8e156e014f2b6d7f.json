{"ast":null,"code":"var _jsxFileName = \"X:\\\\portfolio\\\\CryptoDjangoReact\\\\frontend\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport React, { useState } from \"react\";\nimport { setUserToken } from \"./actions/auth\";\nimport { getTrades } from \"./helpers/getTrades\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst url = process.env.BACK_END_URL || \"http://localhost:8000\";\n\nfunction App() {\n  _s();\n\n  const [contact, setContact] = useState({\n    fName: \"\",\n    lName: \"\",\n    email: \"\"\n  }); // setUserToken(\"grego\", \"V4711gda\")\n  // console.log(getTrades());\n\n  const url = process.env.BACK_END_URL || \"http://localhost:8000\";\n\n  async function getApi() {\n    var myHeaders = new Headers({\n      Authorization: \"Token \" + localStorage.getItem(\"token\"),\n      \"Content-Type\": \"application/json\"\n    });\n    const response = await fetch(`${url}/tracker/`, {\n      headers: myHeaders,\n      method: \"GET\"\n    }).then(res => res.json()).catch(error => {\n      console.error(\"Error:\", error);\n    }).then(result => {\n      data = result;\n      return data;\n    });\n    var data = await response.json();\n    console.log(data);\n\n    if (response) {\n      hideloader();\n    }\n\n    show(data);\n  }\n\n  function handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setContact(prevValue => ({ ...prevValue,\n      [name]: value\n    }));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Hello \", contact.fName, \" \", contact.lName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: contact.email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleChange,\n        name: \"fName\",\n        value: contact.fName,\n        placeholder: \"First Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleChange,\n        name: \"lName\",\n        value: contact.lName,\n        placeholder: \"Last Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleChange,\n        name: \"email\",\n        value: contact.email,\n        placeholder: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"vpRXaxMnFYKgGMzidyl2T35lTY8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["X:/portfolio/CryptoDjangoReact/frontend/src/App.js"],"names":["React","useState","setUserToken","getTrades","url","process","env","BACK_END_URL","App","contact","setContact","fName","lName","email","getApi","myHeaders","Headers","Authorization","localStorage","getItem","response","fetch","headers","method","then","res","json","catch","error","console","result","data","log","hideloader","show","handleChange","event","name","value","target","prevValue"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,SAAT,QAA0B,qBAA1B;;AAEA,MAAMC,GAAG,GAAGC,OAAO,CAACC,GAAR,CAAYC,YAAZ,IAA4B,uBAAxC;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACX,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC;AACnCU,IAAAA,KAAK,EAAE,EAD4B;AAEnCC,IAAAA,KAAK,EAAE,EAF4B;AAGnCC,IAAAA,KAAK,EAAE;AAH4B,GAAD,CAAtC,CADW,CAOX;AACA;;AAEA,QAAMT,GAAG,GAAGC,OAAO,CAACC,GAAR,CAAYC,YAAZ,IAA4B,uBAAxC;;AAGF,iBAAeO,MAAf,GAAwB;AACpB,QAAIC,SAAS,GAAG,IAAIC,OAAJ,CAAY;AACxBC,MAAAA,aAAa,EAAE,WAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CADF;AAExB,sBAAgB;AAFQ,KAAZ,CAAhB;AAKA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEjB,GAAI,WAAR,EAAoB;AAC5CkB,MAAAA,OAAO,EAAEP,SADmC;AAE5CQ,MAAAA,MAAM,EAAE;AAFoC,KAApB,CAAL,CAIlBC,IAJkB,CAIZC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAJI,EAKlBC,KALkB,CAKXC,KAAD,IAAW;AACdC,MAAAA,OAAO,CAACD,KAAR,CAAc,QAAd,EAAwBA,KAAxB;AACH,KAPkB,EAQlBJ,IARkB,CAQZM,MAAD,IAAY;AACdC,MAAAA,IAAI,GAAGD,MAAP;AACA,aAAOC,IAAP;AACH,KAXkB,CAAvB;AAYA,QAAIA,IAAI,GAAG,MAAMX,QAAQ,CAACM,IAAT,EAAjB;AACAG,IAAAA,OAAO,CAACG,GAAR,CAAYD,IAAZ;;AACA,QAAIX,QAAJ,EAAa;AACXa,MAAAA,UAAU;AACX;;AACDC,IAAAA,IAAI,CAACH,IAAD,CAAJ;AACH;;AAQC,WAASI,YAAT,CAAsBC,KAAtB,EAA6B;AACzB,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,KAAK,CAACG,MAA9B;AAEA7B,IAAAA,UAAU,CAAE8B,SAAD,KAAgB,EAAE,GAAGA,SAAL;AAAgB,OAACH,IAAD,GAAQC;AAAxB,KAAhB,CAAD,CAAV;AACH;;AACD,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACI;AAAA,2BACW7B,OAAO,CAACE,KADnB,OAC2BF,OAAO,CAACG,KADnC;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAA,gBAAIH,OAAO,CAACI;AAAZ;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI;AAAA,8BACI;AACI,QAAA,QAAQ,EAAEsB,YADd;AAEI,QAAA,IAAI,EAAC,OAFT;AAGI,QAAA,KAAK,EAAE1B,OAAO,CAACE,KAHnB;AAII,QAAA,WAAW,EAAC;AAJhB;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI;AACI,QAAA,QAAQ,EAAEwB,YADd;AAEI,QAAA,IAAI,EAAC,OAFT;AAGI,QAAA,KAAK,EAAE1B,OAAO,CAACG,KAHnB;AAII,QAAA,WAAW,EAAC;AAJhB;AAAA;AAAA;AAAA;AAAA,cAPJ,eAaI;AACI,QAAA,QAAQ,EAAEuB,YADd;AAEI,QAAA,IAAI,EAAC,OAFT;AAGI,QAAA,KAAK,EAAE1B,OAAO,CAACI,KAHnB;AAII,QAAA,WAAW,EAAC;AAJhB;AAAA;AAAA;AAAA;AAAA,cAbJ,eAmBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA6BH;;GA/EQL,G;;KAAAA,G;AAiFT,eAAeA,GAAf","sourcesContent":["import \"./App.css\";\nimport React, { useState } from \"react\";\nimport { setUserToken } from \"./actions/auth\";\nimport { getTrades } from \"./helpers/getTrades\";\n\nconst url = process.env.BACK_END_URL || \"http://localhost:8000\";\n\nfunction App() {\n    const [contact, setContact] = useState({\n        fName: \"\",\n        lName: \"\",\n        email: \"\",\n    });\n\n    // setUserToken(\"grego\", \"V4711gda\")\n    // console.log(getTrades());\n    \n    const url = process.env.BACK_END_URL || \"http://localhost:8000\";\n\n\n  async function getApi() {\n      var myHeaders = new Headers({\n          Authorization: \"Token \" + localStorage.getItem(\"token\"),\n          \"Content-Type\": \"application/json\",\n      });\n\n      const response = await fetch(`${url}/tracker/`, {\n          headers: myHeaders,\n          method: \"GET\",\n      })\n          .then((res) => res.json())\n          .catch((error) => {\n              console.error(\"Error:\", error);\n          })\n          .then((result) => {\n              data = result\n              return data;\n          });\n      var data = await response.json()\n      console.log(data);\n      if (response){\n        hideloader();\n      }\n      show(data)\n  }\n\n\n\n\n\n\n\n    function handleChange(event) {\n        const { name, value } = event.target;\n\n        setContact((prevValue) => ({ ...prevValue, [name]: value }));\n    }\n    return (\n        <div className=\"container\">\n            <h1>\n                Hello {contact.fName} {contact.lName}\n            </h1>\n            <p>{contact.email}</p>\n            <form>\n                <input\n                    onChange={handleChange}\n                    name=\"fName\"\n                    value={contact.fName}\n                    placeholder=\"First Name\"\n                />\n                <input\n                    onChange={handleChange}\n                    name=\"lName\"\n                    value={contact.lName}\n                    placeholder=\"Last Name\"\n                />\n                <input\n                    onChange={handleChange}\n                    name=\"email\"\n                    value={contact.email}\n                    placeholder=\"Email\"\n                />\n                <button>Submit</button>\n            </form>\n        </div>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}