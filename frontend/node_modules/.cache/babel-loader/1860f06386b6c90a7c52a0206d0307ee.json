{"ast":null,"code":"const url = process.env.BACK_END_URL || \"http://localhost:8000\";\nexport function getUserToken(username, password) {\n  const data = {\n    username: username,\n    password: password\n  };\n  fetch(`${url}/users-auth/`, {\n    method: \"POST\",\n    body: JSON.stringify(data),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(res => res.json()).catch(error => {\n    console.error(\"Error:\", error);\n  }).then(result => {\n    return result.token;\n  });\n} // change localhost for the env var","map":{"version":3,"sources":["X:/portfolio/CryptoDjangoReact/frontend/src/actions/auth.js"],"names":["url","process","env","BACK_END_URL","getUserToken","username","password","data","fetch","method","body","JSON","stringify","headers","then","res","json","catch","error","console","result","token"],"mappings":"AAAA,MAAMA,GAAG,GAAGC,OAAO,CAACC,GAAR,CAAYC,YAAZ,IAA4B,uBAAxC;AACA,OAAO,SAASC,YAAT,CAAsBC,QAAtB,EAAgCC,QAAhC,EAAyC;AAC5C,QAAMC,IAAI,GAAG;AAACF,IAAAA,QAAQ,EAAEA,QAAX;AAAqBC,IAAAA,QAAQ,EAACA;AAA9B,GAAb;AACAE,EAAAA,KAAK,CAAE,GAAER,GAAI,cAAR,EAAuB;AACxBS,IAAAA,MAAM,EAAE,MADgB;AAExBC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,IAAf,CAFkB;AAGxBM,IAAAA,OAAO,EAAC;AACJ,sBAAgB;AADZ;AAHgB,GAAvB,CAAL,CAOCC,IAPD,CAOMC,GAAG,IAAEA,GAAG,CAACC,IAAJ,EAPX,EAQCC,KARD,CAQOC,KAAK,IAAI;AAACC,IAAAA,OAAO,CAACD,KAAR,CAAc,QAAd,EAAwBA,KAAxB;AAA+B,GARhD,EASCJ,IATD,CASMM,MAAM,IAAI;AACd,WAAOA,MAAM,CAACC,KAAd;AACD,GAXD;AAYH,C,CAED","sourcesContent":["const url = process.env.BACK_END_URL || \"http://localhost:8000\"\r\nexport function getUserToken(username, password){\r\n    const data = {username: username, password:password}\r\n    fetch(`${url}/users-auth/`, {\r\n        method: \"POST\",\r\n        body: JSON.stringify(data),\r\n        headers:{\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n    })\r\n    .then(res=>res.json())\r\n    .catch(error => {console.error(\"Error:\", error)})\r\n    .then(result => {\r\n      return result.token\r\n    });\r\n}\r\n\r\n// change localhost for the env var"]},"metadata":{},"sourceType":"module"}