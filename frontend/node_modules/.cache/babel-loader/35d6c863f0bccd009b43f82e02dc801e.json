{"ast":null,"code":"const url = process.env.BACK_END_URL || \"http://localhost:8000\";\nexport async function getTrades() {\n  var data;\n  var myHeaders = new Headers({\n    Authorization: \"Token \" + localStorage.getItem(\"token\"),\n    \"Content-Type\": \"application/json\"\n  });\n  const response = await fetch(`${url}/tracker/`, {\n    headers: myHeaders,\n    method: \"GET\"\n  }).then(res => res.json()).catch(error => {\n    console.error(\"Error:\", error);\n  }).then(result => {\n    data = result;\n    return data;\n  });\n  var data = await response.json();\n}","map":{"version":3,"sources":["X:/portfolio/CryptoDjangoReact/frontend/src/helpers/getTrades.js"],"names":["url","process","env","BACK_END_URL","getTrades","data","myHeaders","Headers","Authorization","localStorage","getItem","response","fetch","headers","method","then","res","json","catch","error","console","result"],"mappings":"AAAA,MAAMA,GAAG,GAAGC,OAAO,CAACC,GAAR,CAAYC,YAAZ,IAA4B,uBAAxC;AAGA,OAAO,eAAeC,SAAf,GAA2B;AAC9B,MAAIC,IAAJ;AACA,MAAIC,SAAS,GAAG,IAAIC,OAAJ,CAAY;AACxBC,IAAAA,aAAa,EAAE,WAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CADF;AAExB,oBAAgB;AAFQ,GAAZ,CAAhB;AAKA,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEZ,GAAI,WAAR,EAAoB;AAC5Ca,IAAAA,OAAO,EAAEP,SADmC;AAE5CQ,IAAAA,MAAM,EAAE;AAFoC,GAApB,CAAL,CAIlBC,IAJkB,CAIZC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAJI,EAKlBC,KALkB,CAKXC,KAAD,IAAW;AACdC,IAAAA,OAAO,CAACD,KAAR,CAAc,QAAd,EAAwBA,KAAxB;AACH,GAPkB,EAQlBJ,IARkB,CAQZM,MAAD,IAAY;AACdhB,IAAAA,IAAI,GAAGgB,MAAP;AACA,WAAOhB,IAAP;AACH,GAXkB,CAAvB;AAYA,MAAIA,IAAI,GAAG,MAAMM,QAAQ,CAACM,IAAT,EAAjB;AACH","sourcesContent":["const url = process.env.BACK_END_URL || \"http://localhost:8000\";\r\n\r\n\r\nexport async function getTrades() {\r\n    var data\r\n    var myHeaders = new Headers({\r\n        Authorization: \"Token \" + localStorage.getItem(\"token\"),\r\n        \"Content-Type\": \"application/json\",\r\n    });\r\n\r\n    const response = await fetch(`${url}/tracker/`, {\r\n        headers: myHeaders,\r\n        method: \"GET\",\r\n    })\r\n        .then((res) => res.json())\r\n        .catch((error) => {\r\n            console.error(\"Error:\", error);\r\n        })\r\n        .then((result) => {\r\n            data = result\r\n            return data;\r\n        });\r\n    var data = await response.json()\r\n}\r\n"]},"metadata":{},"sourceType":"module"}