{"ast":null,"code":"var _jsxFileName = \"X:\\\\portfolio\\\\CryptoDjangoReact\\\\frontend\\\\src\\\\components\\\\Trades.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport React from \"react-dom\";\nimport { getTracker } from \"../helpers/getTracker\";\nimport { getUserToken } from \"../helpers/getUserToken\";\nimport { useCurrentUser } from \"./CurrentUserContext\";\nimport NavBar from \"./NavBar\";\nimport Footer from \"./Footer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst url = process.env.BACK_END_URL || \"http://localhost:8000\";\n\nfunction Trades() {\n  _s();\n\n  const [trades, setTrades] = useState([]);\n  const [refresh, setRefresh] = useState(false);\n  const {\n    currentUser,\n    saveCurrentUser\n  } = useCurrentUser();\n\n  function user() {\n    getUserToken(\"Grego\", \"V4711gda\", \"http://localhost:8000\").catch(e => {\n      return {\n        Error: e\n      };\n    }).then(res => {\n      if (res.token) {\n        console.log(\"Succesfully loged in\"); // This saveCurrentUser is to set a context var(user)\n\n        saveCurrentUser(res.user.id, res.token, res.user.username, res.user.email);\n      } else {\n        console.log(\"Error: \", res);\n      }\n    });\n  }\n\n  function refreshTrades() {\n    setTrades([]);\n    refresh ? setRefresh(false) : setRefresh(true);\n  }\n\n  useEffect(() => {\n    setTrades([]);\n\n    const fetchTrades = async () => {\n      try {\n        const response = await getTracker(currentUser.token, \"trades\", url);\n\n        if (response.detail !== \"Invalid token.\") {\n          response.forEach(trade => {\n            trade.start = trade.start.substring(0, 10);\n            trade.end = trade.end.substring(0, 10); // (date.replace(\"T\", \" \").replace(\"Z\", \"\")) for details of the trade\n\n            setTrades(prevTrade => [...prevTrade, trade]);\n          });\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    fetchTrades(); // i disable the props.url warning\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentUser, refresh]);\n  console.log(trades);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"trades\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"page-wrap\",\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title\",\n          children: \"Trades\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            cellspacing: \"0\",\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                align: \"center\",\n                children: \"Pair\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                align: \"center\",\n                class: \"start\",\n                children: \"Start\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                align: \"center\",\n                class: \"end\",\n                children: \"End\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                align: \"right\",\n                class: \"p-l\",\n                children: \"Profit/Loss\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                align: \"right\",\n                class: \"prctg\",\n                children: \"Percentage\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 29\n            }, this), trades.map(trade => {\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  align: \"center\",\n                  class: \"pair\",\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    width: \"30px\",\n                    height: \"30px\",\n                    src: trade.logo,\n                    alt: \"coin logo\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 104,\n                    columnNumber: 45\n                  }, this), trade.pair]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  align: \"center\",\n                  class: \"start\",\n                  children: trade.start\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  align: \"center\",\n                  class: \"end\",\n                  children: trade.end\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  align: \"right\",\n                  class: \"p-l\",\n                  children: trade.profit_loss.toFixed(2)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  align: \"right\",\n                  class: \"prctg\",\n                  children: trade.percentage.toFixed(2)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 41\n                }, this)]\n              }, trade.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 37\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          refreshTrades();\n        },\n        children: \"Refresh\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          user();\n        },\n        children: \"User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Trades, \"ZulReRwXRpS1GJl1RIrTtj8iGnE=\", false, function () {\n  return [useCurrentUser];\n});\n\n_c = Trades;\nexport default Trades;\n\nvar _c;\n\n$RefreshReg$(_c, \"Trades\");","map":{"version":3,"sources":["X:/portfolio/CryptoDjangoReact/frontend/src/components/Trades.js"],"names":["useEffect","useState","React","getTracker","getUserToken","useCurrentUser","NavBar","Footer","url","process","env","BACK_END_URL","Trades","trades","setTrades","refresh","setRefresh","currentUser","saveCurrentUser","user","catch","e","Error","then","res","token","console","log","id","username","email","refreshTrades","fetchTrades","response","detail","forEach","trade","start","substring","end","prevTrade","map","logo","pair","profit_loss","toFixed","percentage"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport React from \"react-dom\";\r\nimport { getTracker } from \"../helpers/getTracker\";\r\nimport { getUserToken } from \"../helpers/getUserToken\";\r\nimport { useCurrentUser } from \"./CurrentUserContext\";\r\nimport NavBar from \"./NavBar\";\r\nimport Footer from \"./Footer\";\r\n\r\n\r\n\r\nconst url = process.env.BACK_END_URL || \"http://localhost:8000\";\r\n\r\n\r\nfunction Trades() {\r\n    const [trades, setTrades] = useState([]);\r\n    const [refresh, setRefresh] = useState(false);\r\n    const { currentUser, saveCurrentUser } = useCurrentUser();\r\n\r\n    function user() {\r\n        getUserToken(\"Grego\", \"V4711gda\", \"http://localhost:8000\")\r\n            .catch((e) => {\r\n                return { Error: e };\r\n            })\r\n            .then((res) => {\r\n                if (res.token) {\r\n                    console.log(\"Succesfully loged in\");\r\n                    // This saveCurrentUser is to set a context var(user)\r\n                    saveCurrentUser(\r\n                        res.user.id,\r\n                        res.token,\r\n                        res.user.username,\r\n                        res.user.email\r\n                    );\r\n                } else {\r\n                    console.log(\"Error: \", res);\r\n                }\r\n            });\r\n    }\r\n\r\n    function refreshTrades() {\r\n        setTrades([]);\r\n        refresh ? setRefresh(false) : setRefresh(true);\r\n    }\r\n\r\n    useEffect(() => {\r\n        setTrades([])\r\n        const fetchTrades = async () => {\r\n            try {\r\n                const response = await getTracker(\r\n                    currentUser.token,\r\n                    \"trades\",\r\n                    url\r\n                );\r\n                if (response.detail !== \"Invalid token.\") {\r\n                    response.forEach((trade) => {\r\n                        trade.start = trade.start.substring(0, 10);\r\n                        trade.end = trade.end.substring(0, 10);\r\n                        // (date.replace(\"T\", \" \").replace(\"Z\", \"\")) for details of the trade\r\n                        setTrades((prevTrade) => [...prevTrade, trade]);\r\n                    });\r\n                }\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        };\r\n        fetchTrades();\r\n        // i disable the props.url warning\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [currentUser, refresh]);\r\n\r\n    console.log(trades);\r\n\r\n    return (\r\n        <div className=\"trades\">\r\n        <div class=\"page-wrap\">\r\n            <NavBar />\r\n                \r\n                <div class=\"section\">\r\n                    <div className=\"title\">Trades</div>\r\n                    <div className=\"table\">\r\n                        <table cellspacing=\"0\">\r\n                            <tr>\r\n                                <th align=\"center\">\r\n                                    Pair\r\n                                </th>\r\n                                <th align=\"center\" class=\"start\">\r\n                                    Start\r\n                                </th>\r\n                                <th align=\"center\" class=\"end\">\r\n                                    End\r\n                                </th>\r\n                                <th align=\"right\" class=\"p-l\">\r\n                                    Profit/Loss\r\n                                </th>\r\n                                <th align=\"right\" class=\"prctg\">\r\n                                    Percentage\r\n                                </th>\r\n                            </tr>\r\n\r\n                            {trades.map((trade) => {\r\n                                return (\r\n                                    <tr key={trade.id}>\r\n                                        <td align=\"center\" class=\"pair\">\r\n                                            <img width=\"30px\" height=\"30px\" src={trade.logo} alt=\"coin logo\" />\r\n                                            {trade.pair}\r\n                                        </td>\r\n                                        <td align=\"center\" class=\"start\">\r\n                                            {trade.start}\r\n                                        </td>\r\n                                        <td align=\"center\" class=\"end\">\r\n                                            {trade.end}\r\n                                        </td>\r\n                                        <td align=\"right\" class=\"p-l\">\r\n                                            {trade.profit_loss.toFixed(2)}\r\n                                        </td>\r\n                                        <td align=\"right\" class=\"prctg\">\r\n                                            {trade.percentage.toFixed(2)}\r\n                                        </td>\r\n                                    </tr>\r\n                                );\r\n                            })}\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n                <button\r\n                    onClick={() => {\r\n                        refreshTrades();\r\n                    }}\r\n                >\r\n                    Refresh\r\n                </button>\r\n                <button\r\n                    onClick={() => {\r\n                        user();\r\n                    }}\r\n                >\r\n                    User\r\n                </button>\r\n                <Footer />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Trades;\r\n"]},"metadata":{},"sourceType":"module"}