{"ast":null,"code":"var _jsxFileName = \"X:\\\\portfolio\\\\CryptoDjangoReact\\\\frontend\\\\src\\\\components\\\\Trades.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport React from \"react-dom\";\nimport { getTrades } from \"../helpers/getTrades\";\nimport { useCurrentUser } from \"./CurrentUserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Trades(props) {\n  _s();\n\n  const [trades, setTrades] = useState([{\n    id: null,\n    owner: null,\n    pair: null,\n    percentage: null,\n    profit_loss: null,\n    start: null,\n    end: null\n  }]);\n  const {\n    currentUser\n  } = useCurrentUser();\n\n  function refreshTrades() {\n    getTrades(currentUser.token, props.url).then(res => {\n      // console.log(res);\n      res.forEach((trade, index) => {\n        trades[index] = trade;\n      });\n    });\n    console.log(trades);\n  } // function ObjTrade(){\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"trades\",\n    children: [\"Trades\", /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        refreshTrades();\n      },\n      children: \"Refresh\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"section\",\n      children: [/*#__PURE__*/_jsxDEV(\"text\", {\n        children: \"Trades\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        cellspacing: \"0\",\n        class: \"table\",\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            align: \"center\",\n            class: \"pair\",\n            children: \"Pair\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            align: \"center\",\n            class: \"start\",\n            children: \"Start\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            align: \"center\",\n            class: \"end\",\n            children: \"End\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            align: \"right\",\n            class: \"p-l\",\n            children: \"Profit/Loss\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            align: \"right\",\n            class: \"prctg\",\n            children: \"Percentage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: trades.map(trade => {\n            return /*#__PURE__*/_jsxDEV(\"td\", {\n              align: \"center\",\n              class: \"pair\",\n              children: trades.pair\n            }, trades.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 53\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Trades, \"lsCxmIVHTkakIjqso5z/zw/pOdo=\", false, function () {\n  return [useCurrentUser];\n});\n\n_c = Trades;\nexport default Trades;\n\nvar _c;\n\n$RefreshReg$(_c, \"Trades\");","map":{"version":3,"sources":["X:/portfolio/CryptoDjangoReact/frontend/src/components/Trades.js"],"names":["useState","React","getTrades","useCurrentUser","Trades","props","trades","setTrades","id","owner","pair","percentage","profit_loss","start","end","currentUser","refreshTrades","token","url","then","res","forEach","trade","index","console","log","map"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,WAAlB;AACA,SAASC,SAAT,QAA0B,sBAA1B;AACA,SAASC,cAAT,QAA+B,sBAA/B;;;AAEA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAAA;;AACnB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,CACjC;AACIQ,IAAAA,EAAE,EAAE,IADR;AAEIC,IAAAA,KAAK,EAAE,IAFX;AAGIC,IAAAA,IAAI,EAAE,IAHV;AAIIC,IAAAA,UAAU,EAAE,IAJhB;AAKIC,IAAAA,WAAW,EAAE,IALjB;AAMIC,IAAAA,KAAK,EAAE,IANX;AAOIC,IAAAA,GAAG,EAAE;AAPT,GADiC,CAAD,CAApC;AAYA,QAAM;AAAEC,IAAAA;AAAF,MAAkBZ,cAAc,EAAtC;;AAEA,WAASa,aAAT,GAAyB;AACrBd,IAAAA,SAAS,CAACa,WAAW,CAACE,KAAb,EAAoBZ,KAAK,CAACa,GAA1B,CAAT,CAAwCC,IAAxC,CAA8CC,GAAD,IAAS;AAClD;AACAA,MAAAA,GAAG,CAACC,OAAJ,CAAY,CAACC,KAAD,EAAQC,KAAR,KAAgB;AAAEjB,QAAAA,MAAM,CAACiB,KAAD,CAAN,GAAgBD,KAAhB;AAAuB,OAArD;AACH,KAHD;AAIAE,IAAAA,OAAO,CAACC,GAAR,CAAYnB,MAAZ;AACH,GArBkB,CAwBnB;AAEA;;;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,sCAEI;AACI,MAAA,OAAO,EAAE,MAAM;AACXU,QAAAA,aAAa;AAChB,OAHL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eASI;AAAK,MAAA,KAAK,EAAC,SAAX;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,WAAW,EAAC,GAAnB;AAAuB,QAAA,KAAK,EAAC,OAA7B;AAAA,gCACI;AAAA,kCACI;AAAI,YAAA,KAAK,EAAC,QAAV;AAAmB,YAAA,KAAK,EAAC,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAI,YAAA,KAAK,EAAC,QAAV;AAAmB,YAAA,KAAK,EAAC,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAI,YAAA,KAAK,EAAC,QAAV;AAAmB,YAAA,KAAK,EAAC,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII;AAAI,YAAA,KAAK,EAAC,OAAV;AAAmB,YAAA,KAAK,EAAC,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAKI;AAAI,YAAA,KAAK,EAAC,OAAV;AAAmB,YAAA,KAAK,EAAC,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAQI;AAAA,oBACCV,MAAM,CAACoB,GAAP,CAAYJ,KAAD,IAAW;AAAE,gCAAO;AAAI,cAAA,KAAK,EAAC,QAAV;AAAmB,cAAA,KAAK,EAAC,MAAzB;AAAA,wBAAiDhB,MAAM,CAACI;AAAxD,eAAqCJ,MAAM,CAACE,EAA5C;AAAA;AAAA;AAAA;AAAA,oBAAP;AAA2E,WAAnG;AADD;AAAA;AAAA;AAAA;AAAA,gBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiCH;;GA7DQJ,M;UAamBD,c;;;KAbnBC,M;AA+DT,eAAeA,MAAf","sourcesContent":["import { useState } from \"react\";\r\nimport React from \"react-dom\";\r\nimport { getTrades } from \"../helpers/getTrades\";\r\nimport { useCurrentUser } from \"./CurrentUserContext\";\r\n\r\nfunction Trades(props) {\r\n    const [trades, setTrades] = useState([\r\n        {\r\n            id: null,\r\n            owner: null,\r\n            pair: null,\r\n            percentage: null,\r\n            profit_loss: null,\r\n            start: null,\r\n            end: null,\r\n        },\r\n    ]);\r\n\r\n    const { currentUser } = useCurrentUser();\r\n\r\n    function refreshTrades() {\r\n        getTrades(currentUser.token, props.url).then((res) => {\r\n            // console.log(res);\r\n            res.forEach((trade, index)=>{ trades[index] = trade })\r\n        });\r\n        console.log(trades);\r\n    }\r\n\r\n\r\n    // function ObjTrade(){\r\n\r\n    // }\r\n\r\n    return (\r\n        <div className=\"trades\">\r\n            Trades\r\n            <button\r\n                onClick={() => {\r\n                    refreshTrades();\r\n                }}\r\n            >\r\n                Refresh\r\n            </button>\r\n            <div class=\"section\">\r\n                <text>Trades</text>\r\n                <table cellspacing=\"0\" class=\"table\">\r\n                    <tr>\r\n                        <th align=\"center\" class=\"pair\">Pair</th>\r\n                        <th align=\"center\" class=\"start\">Start</th>\r\n                        <th align=\"center\" class=\"end\">End</th>\r\n                        <th align=\"right\"  class=\"p-l\">Profit/Loss</th>\r\n                        <th align=\"right\"  class=\"prctg\">Percentage</th>\r\n                    </tr>\r\n                    <tr>\r\n                    {trades.map((trade) => { return <td align=\"center\" class=\"pair\" key={trades.id}>{trades.pair}</td> })}\r\n                        {/* <td align=\"center\" class=\"pair\"><img src=\"{{trade.logo}}\" width=\"40px\" height=\"40px\" alt=\"logo\"/><b>{{trades.pair}}</b></td>\r\n                        <td align=\"center\" class=\"start\">{trade.start}</td>\r\n                        <td align=\"center\" class=\"end\">{{trade.end|slice:\"0:10\"}}</td>\r\n                        <td align=\"right\" class=\"p-l profit\">{{trade.profit}}</td>\r\n                        <td align=\"right\" class=\"prctg profit\">%{{trade.percentage}}</td> */}\r\n                    </tr>\r\n\r\n                </table>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Trades;\r\n"]},"metadata":{},"sourceType":"module"}