{"ast":null,"code":"var _jsxFileName = \"X:\\\\portfolio\\\\CryptoDjangoReact\\\\frontend\\\\src\\\\components\\\\UploadFile.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst input = document.getElementById('fileinput'); // This will upload the file after having read it\n\nexport default function UploadFile() {\n  const upload = file => {\n    fetch('http://www.example.net', {\n      // Your POST endpoint\n      method: 'POST',\n      headers: {\n        // Content-Type may need to be completely **omitted**\n        // or you may need something\n        \"Content-Type\": \"You will perhaps need to define a content-type here\"\n      },\n      body: file // This is your file object\n\n    }).then(response => response.json() // if the response is a JSON object\n    ).then(success => console.log(success) // Handle the success response object\n    ).catch(error => console.log(error) // Handle the error response object\n    );\n  }; // Event handler executed when a file is selected\n\n\n  const onSelectFile = () => upload(input.files[0]); // Add a listener on your input\n  // It will be triggered when a file will be selected\n\n\n  input.addEventListener('change', onSelectFile, false);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n_c = UploadFile;\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadFile\");","map":{"version":3,"sources":["X:/portfolio/CryptoDjangoReact/frontend/src/components/UploadFile.js"],"names":["input","document","getElementById","UploadFile","upload","file","fetch","method","headers","body","then","response","json","success","console","log","catch","error","onSelectFile","files","addEventListener"],"mappings":";;AAAA,MAAMA,KAAK,GAAGC,QAAQ,CAACC,cAAT,CAAwB,WAAxB,CAAd,C,CAEA;;AACA,eAAe,SAASC,UAAT,GAAqB;AAChC,QAAMC,MAAM,GAAIC,IAAD,IAAU;AACvBC,IAAAA,KAAK,CAAC,wBAAD,EAA2B;AAAE;AAChCC,MAAAA,MAAM,EAAE,MADsB;AAE9BC,MAAAA,OAAO,EAAE;AACP;AACA;AACA,wBAAgB;AAHT,OAFqB;AAO9BC,MAAAA,IAAI,EAAEJ,IAPwB,CAOnB;;AAPmB,KAA3B,CAAL,CAQGK,IARH,CASEC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EATd,CAS8B;AAT9B,MAUEF,IAVF,CAWEG,OAAO,IAAIC,OAAO,CAACC,GAAR,CAAYF,OAAZ,CAXb,CAWkC;AAXlC,MAYEG,KAZF,CAaEC,KAAK,IAAIH,OAAO,CAACC,GAAR,CAAYE,KAAZ,CAbX,CAa8B;AAb9B;AAeD,GAhBD,CADgC,CAmBhC;;;AACA,QAAMC,YAAY,GAAG,MAAMd,MAAM,CAACJ,KAAK,CAACmB,KAAN,CAAY,CAAZ,CAAD,CAAjC,CApBgC,CAsBhC;AACA;;;AACAnB,EAAAA,KAAK,CAACoB,gBAAN,CAAuB,QAAvB,EAAiCF,YAAjC,EAA+C,KAA/C;AACA,sBACI;AAAA,2BACI;AAAO,MAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;KA9BuBf,U","sourcesContent":["const input = document.getElementById('fileinput');\r\n\r\n// This will upload the file after having read it\r\nexport default function UploadFile(){\r\n    const upload = (file) => {\r\n      fetch('http://www.example.net', { // Your POST endpoint\r\n        method: 'POST',\r\n        headers: {\r\n          // Content-Type may need to be completely **omitted**\r\n          // or you may need something\r\n          \"Content-Type\": \"You will perhaps need to define a content-type here\"\r\n        },\r\n        body: file // This is your file object\r\n      }).then(\r\n        response => response.json() // if the response is a JSON object\r\n      ).then(\r\n        success => console.log(success) // Handle the success response object\r\n      ).catch(\r\n        error => console.log(error) // Handle the error response object\r\n      );\r\n    };\r\n    \r\n    // Event handler executed when a file is selected\r\n    const onSelectFile = () => upload(input.files[0]);\r\n    \r\n    // Add a listener on your input\r\n    // It will be triggered when a file will be selected\r\n    input.addEventListener('change', onSelectFile, false);\r\n    return (\r\n        <form>\r\n            <input type=\"file\"></input>\r\n        </form>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}