{"ast":null,"code":"var _jsxFileName = \"X:\\\\portfolio\\\\CryptoDjangoReact\\\\frontend\\\\src\\\\components\\\\Trades.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport React from \"react-dom\";\nimport { getTrades } from \"../helpers/getTrades\";\nimport { getUserToken } from \"../helpers/getUserToken\";\nimport { useCurrentUser } from \"./CurrentUserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Trades(props) {\n  _s();\n\n  const [trades, setTrades] = useState([]);\n  const [refresh, setRefresh] = useState(false);\n  const {\n    currentUser,\n    saveCurrentUser\n  } = useCurrentUser();\n\n  function user() {\n    getUserToken(\"Grego\", \"V4711gda\", \"http://localhost:8000\").catch(e => {\n      return {\n        \"Error\": e\n      };\n    }).then(res => {\n      if (res.token) {\n        console.log(\"Succesfully loged in\"); // This saveCurrentUser is to set a context var(user)\n\n        saveCurrentUser(res.user.id, res.token, res.user.username, res.user.email);\n      } else {\n        console.log(\"Error: \", res);\n      }\n    });\n  } // user();\n  // function fetchTrade(){\n  //     getTrades(currentUser.token, props.url).then((res) => {\n  //         res.forEach((item) => {\n  //             setTrades(prevTrade => [...prevTrade, item])\n  //         });\n  //     });\n  //     console.log(trades);\n  // }\n\n\n  function refreshTrades() {\n    setTrades([]);\n    refresh ? setRefresh(false) : setRefresh(true);\n  }\n\n  ;\n  useEffect(() => {\n    const fetchTrades = async () => {\n      try {\n        const response = await getTrades(currentUser.token, props.url); // if (response.detail === \"Invalid token.\") {\n        // }\n\n        console.log(response);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    fetchTrades();\n  }, [currentUser, refresh]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"trades\",\n    children: [\"Trades\", /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        refreshTrades();\n      },\n      children: \"Refresh\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        user();\n      },\n      children: \"User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"section\",\n      children: [/*#__PURE__*/_jsxDEV(\"text\", {\n        children: \"Trades\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        cellspacing: \"0\",\n        class: \"table\",\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            align: \"center\",\n            class: \"pair\",\n            children: \"Pair\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            align: \"center\",\n            class: \"start\",\n            children: \"Start\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            align: \"center\",\n            class: \"end\",\n            children: \"End\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            align: \"right\",\n            class: \"p-l\",\n            children: \"Profit/Loss\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            align: \"right\",\n            class: \"prctg\",\n            children: \"Percentage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Trades, \"ZulReRwXRpS1GJl1RIrTtj8iGnE=\", false, function () {\n  return [useCurrentUser];\n});\n\n_c = Trades;\nexport default Trades;\n\nvar _c;\n\n$RefreshReg$(_c, \"Trades\");","map":{"version":3,"sources":["X:/portfolio/CryptoDjangoReact/frontend/src/components/Trades.js"],"names":["useEffect","useState","React","getTrades","getUserToken","useCurrentUser","Trades","props","trades","setTrades","refresh","setRefresh","currentUser","saveCurrentUser","user","catch","e","then","res","token","console","log","id","username","email","refreshTrades","fetchTrades","response","url"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,WAAlB;AACA,SAASC,SAAT,QAA0B,sBAA1B;AACA,SAASC,YAAT,QAA6B,yBAA7B;AACA,SAASC,cAAT,QAA+B,sBAA/B;;;AAKA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAAA;;AACnB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM;AAAEW,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAAmCR,cAAc,EAAvD;;AAEA,WAASS,IAAT,GAAgB;AACZV,IAAAA,YAAY,CAAC,OAAD,EAAU,UAAV,EAAsB,uBAAtB,CAAZ,CACCW,KADD,CACOC,CAAC,IAAG;AACP,aAAO;AAAC,iBAASA;AAAV,OAAP;AACH,KAHD,EAICC,IAJD,CAIOC,GAAD,IACN;AACI,UAAIA,GAAG,CAACC,KAAR,EAAe;AACXC,QAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EADW,CAEX;;AACAR,QAAAA,eAAe,CACXK,GAAG,CAACJ,IAAJ,CAASQ,EADE,EAEXJ,GAAG,CAACC,KAFO,EAGXD,GAAG,CAACJ,IAAJ,CAASS,QAHE,EAIXL,GAAG,CAACJ,IAAJ,CAASU,KAJE,CAAf;AAMH,OATD,MASO;AACHJ,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBH,GAAvB;AACH;AACJ,KAlBD;AAmBH,GAzBkB,CA0BnB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAIA,WAASO,aAAT,GAAyB;AACrBhB,IAAAA,SAAS,CAAC,EAAD,CAAT;AACAC,IAAAA,OAAO,GAAGC,UAAU,CAAC,KAAD,CAAb,GAAuBA,UAAU,CAAC,IAAD,CAAxC;AACH;;AAAA;AAEDX,EAAAA,SAAS,CAAC,MAAK;AACX,UAAM0B,WAAW,GAAG,YAAY;AAC5B,UAAG;AACC,cAAMC,QAAQ,GAAG,MAAMxB,SAAS,CAACS,WAAW,CAACO,KAAb,EAAoBZ,KAAK,CAACqB,GAA1B,CAAhC,CADD,CAEC;AAEA;;AACAR,QAAAA,OAAO,CAACC,GAAR,CAAYM,QAAZ;AACH,OAND,CAME,OAAMX,CAAN,EAAS;AACPI,QAAAA,OAAO,CAACC,GAAR,CAAYL,CAAZ;AACH;AACJ,KAVD;;AAWAU,IAAAA,WAAW;AACd,GAbQ,EAaN,CAACd,WAAD,EAAcF,OAAd,CAbM,CAAT;AAiBA,sBACI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,sCAEI;AACI,MAAA,OAAO,EAAE,MAAM;AACXe,QAAAA,aAAa;AAChB,OAHL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eASI;AACI,MAAA,OAAO,EAAE,MAAM;AACXX,QAAAA,IAAI;AACP,OAHL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ,eAgBI;AAAK,MAAA,KAAK,EAAC,SAAX;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,WAAW,EAAC,GAAnB;AAAuB,QAAA,KAAK,EAAC,OAA7B;AAAA,+BACI;AAAA,kCACI;AAAI,YAAA,KAAK,EAAC,QAAV;AAAmB,YAAA,KAAK,EAAC,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII;AAAI,YAAA,KAAK,EAAC,QAAV;AAAmB,YAAA,KAAK,EAAC,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAOI;AAAI,YAAA,KAAK,EAAC,QAAV;AAAmB,YAAA,KAAK,EAAC,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPJ,eAUI;AAAI,YAAA,KAAK,EAAC,OAAV;AAAkB,YAAA,KAAK,EAAC,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVJ,eAaI;AAAI,YAAA,KAAK,EAAC,OAAV;AAAkB,YAAA,KAAK,EAAC,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAbJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA+DH;;GA5HQR,M;UAGoCD,c;;;KAHpCC,M;AA8HT,eAAeA,MAAf","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport React from \"react-dom\";\r\nimport { getTrades } from \"../helpers/getTrades\";\r\nimport { getUserToken } from \"../helpers/getUserToken\";\r\nimport { useCurrentUser } from \"./CurrentUserContext\";\r\n\r\n\r\n\r\n\r\nfunction Trades(props) {\r\n    const [trades, setTrades] = useState([]);\r\n    const [refresh, setRefresh] = useState(false)\r\n    const { currentUser, saveCurrentUser } = useCurrentUser();\r\n\r\n    function user() {\r\n        getUserToken(\"Grego\", \"V4711gda\", \"http://localhost:8000\")\r\n        .catch(e=> {\r\n            return {\"Error\": e}\r\n        })\r\n        .then((res) => \r\n        {   \r\n            if (res.token) {\r\n                console.log(\"Succesfully loged in\");\r\n                // This saveCurrentUser is to set a context var(user)\r\n                saveCurrentUser(\r\n                    res.user.id,\r\n                    res.token,\r\n                    res.user.username,\r\n                    res.user.email\r\n                );\r\n            } else {\r\n                console.log(\"Error: \", res);\r\n            }\r\n        });\r\n    }\r\n    // user();\r\n\r\n    // function fetchTrade(){\r\n    //     getTrades(currentUser.token, props.url).then((res) => {\r\n    //         res.forEach((item) => {\r\n    //             setTrades(prevTrade => [...prevTrade, item])\r\n    //         });\r\n    //     });\r\n    //     console.log(trades);\r\n    // }\r\n\r\n\r\n\r\n    function refreshTrades() {\r\n        setTrades([])\r\n        refresh ? setRefresh(false) : setRefresh(true)\r\n    };\r\n\r\n    useEffect(()=> {\r\n        const fetchTrades = async () => {\r\n            try{\r\n                const response = await getTrades(currentUser.token, props.url)\r\n                // if (response.detail === \"Invalid token.\") {\r\n\r\n                // }\r\n                console.log(response); \r\n            } catch(e) {\r\n                console.log(e);\r\n            }\r\n        }\r\n        fetchTrades();\r\n    }, [currentUser, refresh])\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"trades\">\r\n            Trades\r\n            <button\r\n                onClick={() => {\r\n                    refreshTrades();\r\n                }}\r\n            >\r\n                Refresh\r\n            </button>\r\n            <button\r\n                onClick={() => {\r\n                    user();\r\n                }}\r\n            >\r\n                User\r\n            </button>\r\n            <div class=\"section\">\r\n                <text>Trades</text>\r\n                <table cellspacing=\"0\" class=\"table\">\r\n                    <tr>\r\n                        <th align=\"center\" class=\"pair\">\r\n                            Pair\r\n                        </th>\r\n                        <th align=\"center\" class=\"start\">\r\n                            Start\r\n                        </th>\r\n                        <th align=\"center\" class=\"end\">\r\n                            End\r\n                        </th>\r\n                        <th align=\"right\" class=\"p-l\">\r\n                            Profit/Loss\r\n                        </th>\r\n                        <th align=\"right\" class=\"prctg\">\r\n                            Percentage\r\n                        </th>\r\n                    </tr>\r\n\r\n                    {/* {trades.map((trade, i) => {\r\n                        return (\r\n                            <tr>\r\n                                <td align=\"center\" class=\"pair\" key={i}>\r\n                                    {trade.pair}\r\n                                </td>\r\n                                <td align=\"center\" class=\"start\" key={i}>\r\n                                    {trade.start}\r\n                                </td>\r\n                                <td align=\"center\" class=\"end\" key={i}>\r\n                                    {trade.end}\r\n                                </td>\r\n                                <td align=\"center\" class=\"p-l\" key={i}>\r\n                                    {trade.profit_loss}\r\n                                </td>\r\n                                <td align=\"center\" class=\"prctg\" key={i}>\r\n                                    {trade.percentage}\r\n                                </td>\r\n                            </tr>\r\n                        );\r\n                    })} */}\r\n                </table>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Trades;\r\n"]},"metadata":{},"sourceType":"module"}